@inherits LayoutComponentBase
@inject AppState _appState;
@implements IDisposable;

<MudThemeProvider @bind-IsDarkMode="_appState.IsDarkMode" Theme="_theme" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Color="@_appState.AppBarColor">
        <MudLink Href="" Color="Color.Inherit">
            <MudText Class="ml-3 logo-text">Rithm</MudText>
        </MudLink>
        <MudSpacer />
        <MudButton StartIcon="@Icons.Material.Filled.Code" Class="ml-0 ml-sm-8" Color="Color.Inherit" Href="code"><div class="d-none d-sm-flex">Code</div></MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Feed" Class="ml-0 ml-sm-8" Color="Color.Inherit" Href="blog"><div class="d-none d-sm-flex">Blog</div></MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Person" Class="ml-0 ml-sm-8" Color="Color.Inherit" Href="about"><div class="d-none d-sm-flex">About</div></MudButton>
    </MudAppBar>
    <MudMainContent>
        <MudContainer Class="mt-8 d-flex flex-column" style="min-height: 90vh;" MaxWidth="MaxWidth.Large">
            @Body
            <footer class="mt-auto mb-4">
                <MudDivider Class="mb-4" />
                @foreach(var footerLink in _footerLinks)
                {
                    <MudLink Href="@footerLink.Href" Typo="@Typo.body2" Class="mr-4">@footerLink.Name</MudLink>
                }
            </footer>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();

    private class Link
    {
        public string Name { get; set; } = default!;
        public string Href { get; set; } = default!;
    }

    private IEnumerable<Link> _footerLinks = new[]
    {
        new Link{Name = "About",Href = "about"},
        new Link{Name = "Theme",Href = "theme"},
    };

    protected override void OnInitialized()
    {
        _appState.StateChanged += StateChanged;
        
        _theme = new MudTheme
            {
                Typography = new Typography
                {
                  Default = new Default
                  {
                      FontSize = "1rem"
                  }  
                },
                Palette = new Palette
                {
                    Primary = new MudColor("#607D8B"),
                    Secondary = new MudColor("#8b6e60"),
                    Tertiary = new MudColor("#60678b")
                },
                PaletteDark = new PaletteDark
                {
                    Primary = new MudColor("#78909c"),
                    Secondary = new MudColor("#9c8478"),
                    Tertiary = new MudColor("#787e9c")
                }
            };
    }

    public void StateChanged()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        _appState.StateChanged -= StateChanged;
    }
}
