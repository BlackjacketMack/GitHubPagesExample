@inherits LayoutComponentBase
@inject AppState _appState;
@implements IDisposable;
@inject NavigationManager _navigationManager

<MudThemeProvider @bind-IsDarkMode="_appState.IsDarkMode" Theme="_theme" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Color="@_appState.AppBarColor">
        <MudLink Href="" Color="Color.Inherit">
            <MudText Class="ml-3 logo-text">Rithm</MudText>
        </MudLink>
        <MudSpacer />
        <MudButton StartIcon="@Icons.Material.Filled.Code" Color="Color.Inherit" OnClick="@(()=>navigateTo("code"))">Code</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Feed" Color="Color.Inherit" OnClick="@(()=>navigateTo("blog"))">Blog</MudButton>
        <MudMenu >
            <ActivatorContent>
                <MudButton StartIcon="@Icons.Material.Filled.Settings" Color="Color.Inherit">Settings</MudButton>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem>
                    <MudLink Href="theme">Theme</MudLink>
                </MudMenuItem>
                <MudMenuItem>
                    <MudLink Href="fetchdata">Fetch Data</MudLink>
                </MudMenuItem>
                <MudMenuItem>
                    <MudLink Href="counter">Counter</MudLink>
                </MudMenuItem>
            </ChildContent>
        </MudMenu>
    </MudAppBar>
    <MudMainContent>
        <MudContainer Class="mt-8" MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code {
    private MudTheme _theme = new();

    protected override void OnInitialized()
    {
        _appState.StateChanged += StateChanged;

        var primary = new MudBlazor.Utilities.MudColor("#607D8B");
        var secondary = new MudBlazor.Utilities.MudColor("#F44336");
        var tertiary = new MudBlazor.Utilities.MudColor("#009688");
        _theme = new MudTheme
            {
                Typography = new Typography
                {
                  Default = new Default
                  {
                      FontSize = "1rem"
                  }  
                },
                Palette = new Palette
                {
                    Primary = primary,
                    Secondary = secondary,
                    Tertiary = tertiary
                },
                PaletteDark = new PaletteDark
                {
                    Primary = primary,
                    Secondary = secondary,
                    Tertiary = tertiary
                }
            };
    }

    public void StateChanged()
    {
        StateHasChanged();
    }

    public void Dispose()
    {

    }

    private void navigateTo(string url) => _navigationManager.NavigateTo(url);
}
